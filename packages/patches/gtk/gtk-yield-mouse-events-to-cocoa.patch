diff --git a/gdk/gdk.h b/gdk/gdk.h
index 3f0b1ac..25e8ebf 100644
--- a/gdk/gdk.h
+++ b/gdk/gdk.h
@@ -83,6 +83,8 @@ gchar*	  gdk_set_locale	   	(void);
 const char *         gdk_get_program_class (void);
 void                 gdk_set_program_class (const char *program_class);
 
+void                 xam_gdk_quartz_set_yield_mouse_events_to_cocoa (gboolean val);
+
 /* Push and pop error handlers for X errors
  */
 void      gdk_error_trap_push           (void);
diff --git a/gdk/quartz/gdkevents-quartz.c b/gdk/quartz/gdkevents-quartz.c
index ee7dc96..88a1a3e 100644
--- a/gdk/quartz/gdkevents-quartz.c
+++ b/gdk/quartz/gdkevents-quartz.c
@@ -48,6 +48,7 @@ static GdkWindow   *current_keyboard_window;
 
 /* This is the event mask from the last event */
 static GdkEventMask current_event_mask;
+static gboolean yield_mouse_events_to_cocoa = FALSE;
 
 static void append_event                        (GdkEvent  *event,
                                                  gboolean   windowing);
@@ -66,6 +67,11 @@ static GdkWindow *find_toplevel_under_pointer   (GdkDisplay *display,
 - (int) momentumPhase;
 @end
 
+void
+xam_gdk_quartz_set_yield_mouse_events_to_cocoa (gboolean val)
+{
+  yield_mouse_events_to_cocoa = val;
+}
 
 NSEvent *
 gdk_quartz_event_get_nsevent (GdkEvent *event)
@@ -1638,6 +1644,8 @@ gdk_event_translate (GdkEvent *event,
   if ([(GdkQuartzWindow *)nswindow isInManualResize])
     return FALSE;
 
+  GdkQuartzView *view = (GdkQuartzView *)[[nsevent window] contentView];
+
   /* Find the right GDK window to send the event to, taking grabs and
    * event masks into consideration.
    */
@@ -1671,6 +1679,23 @@ gdk_event_translate (GdkEvent *event,
 	}
     }
 
+  if ((event_type == NSLeftMouseDown ||
+       event_type == NSRightMouseDown ||
+       event_type == NSOtherMouseDown ||
+       event_type == NSMouseMoved ||
+       event_type == NSMouseEntered ||
+       event_type == NSMouseExited ||
+       event_type == NSLeftMouseDragged ||
+       event_type == NSRightMouseDragged ||
+       event_type == NSOtherMouseDragged ||
+       event_type == NSScrollWheel) && yield_mouse_events_to_cocoa == TRUE)
+    {
+      return FALSE;
+    }
+
   /* If the app is not active leave the event to AppKit so the window gets
    * focused correctly and don't do click-through (so we behave like most
    * native apps). If the app is active, we focus the window and then handle
